// Take it, use it and share it.
// Human knowledge belongs to the world

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.Vector;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author whosyourdaddy
 */
public class FrameUtama extends javax.swing.JFrame implements Runnable {

    Code code = new Code();
    String name;
    Socket s;
    BufferedReader br;
    BufferedWriter bw;
    Thread th;
    Vector user = new Vector();

    /**
     * Creates new form FrameUtama
     */
    public FrameUtama() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listUser = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtChat = new javax.swing.JTextArea();
        txtMessage = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuConnect = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Client");

        jScrollPane1.setViewportView(listUser);

        txtChat.setEditable(false);
        txtChat.setColumns(20);
        txtChat.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtChat.setRows(5);
        jScrollPane2.setViewportView(txtChat);

        txtMessage.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        menuConnect.setText("Connect Server");
        menuConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConnectActionPerformed(evt);
            }
        });
        jMenu1.add(menuConnect);
        jMenu1.add(jSeparator1);

        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConnectActionPerformed
        String name = JOptionPane.showInputDialog(this, "Masukkan nama anda");
        String serverIP = JOptionPane.showInputDialog(this, "Masukkan IP server", "127.0.0.1");
        connectServer(name, serverIP);
    }//GEN-LAST:event_menuConnectActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        try {
            bw.write(code.LOGOUT + name);
            bw.newLine();
            bw.flush();
        } catch (Exception e) {
        }
        System.exit(1);
    }//GEN-LAST:event_menuExitActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        if (txtMessage.getText().equals("")) {
        } else {
            try {
                bw.write(code.MESSAGE + "<" + name + ">" + txtMessage.getText());
                bw.newLine();
                bw.flush();
                txtMessage.setText("");
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_txtMessageActionPerformed

   public void connectServer(String name, String ip) {
        try {
            s = new Socket(ip, 2124);
            this.name = name;
            setTitle("Client : " + name);
            startChat();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cannot Connect Server", "Failed", JOptionPane.ERROR_MESSAGE);
        }
    }
    
   public void startChat() {
        try {
            System.out.println("Connect with Server " + s.getInetAddress() + ":" + s.getPort());
            br = new BufferedReader(new InputStreamReader(s.getInputStream()));
            bw = new BufferedWriter(new OutputStreamWriter(s.getOutputStream()));

            bw.write(name);
            bw.newLine();
            bw.flush();

            th = new Thread(this);
            th.start();
        } catch (Exception e) {
        }
    }
   
   public void run() {
        while (true) {
            try {
                String str = br.readLine();
                String suf = str.substring(0, 4);
                int x = str.length();
                String msg = str.substring(4, x);
                if (suf.equals(code.MESSAGE)) {
                    txtChat.append(msg + "\n");
                } else if (suf.equals(code.USER)) {
                    user.add(msg);
                    listUser.removeAll();
                    listUser.setListData(user);
                    listUser.setCellRenderer(new Cell());
                } else if (suf.equals(code.UPDATE)) {
                    user.removeAllElements();
                }
            } catch (Exception e) {
            }
        }
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrameUtama().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JList listUser;
    private javax.swing.JMenuItem menuConnect;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JTextArea txtChat;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
